date: 2017-08-24 17:29:13
author: Wolfpan
email: xxxx@163.com
site: 
ip: 

谢谢博主共享，学习

- - - - - - - - - - - - - - - -

date: 2017-08-28 20:40:13
author: cosformula
email: xxxx@163.com
site: 
ip: 

谢谢博主共享，学习

- - - - - - - - - - - - - - - -

date: 2017-08-29 16:40:13
author: Wolfpan
email: xxxx@163.com
site: 
ip: 

请教博主，怎么处理平局和胜负之间的关系？围棋平局非常罕见，可以忽略不计，但是象棋这种和局比较多的情况下，如果计算机算出胜率非常高，那应该忽略走棋网络里平局所计算出的概率，如果不忽略，AI会把赢棋走成和棋。相反如果计算机算出胜率非常低，那应该加上平局的概率，让AI去争取和棋。

- - - - - - - - - - - - - - - -

date: 2017-08-29 21:17:13
author: Npa
email: 315067671@qq.com
site: 
ip: 

不好意思，因觉得五子棋可能实现起来比较相似，适合学习；而且我的硬件暂时不太跟得上……所以改成五子棋了。
至于你说的这种情况，没有实践过，所以只能说说大致的想法。我是这样理解的，不管是随机模拟还是用价值网络直接看，最后得到结果都是一个可能性w∈(0, 1)代表了我方的胜率。假定我永远选所有子盘面中p最高的那个。当w∈(0, 0.5)，就是劣势，那么选最偏向0.5的那个，就是争取和棋；当p∈(0.5, 1)，就是优势，那么选最偏向1的那个，就是争取胜利。这不正好是你说的决策吗？
我对你说的思路的另一层理解是，对于子盘面r的一系列子子盘面p，由于取了平均，所以在优势局面下和棋的预测(w≈0.5)“拖累”了r的平均胜率。在子盘面总体w偏高的情况下，把各个r下面的p中，w≈0.5的全部砍掉，然后重新计算r的平均胜率。没有太过缜密的思考，我不太确定这样做在统计意义上是否有效，可能还是要实验看看。
如果你实现了中国象棋的版本，或者在这个思路有什么进展，请留博文给我拜读哦。：）

- - - - - - - - - - - - - - - -

date: 2017-08-29 22:48:14
author: Wolfpan
email: wolfpan@live.com
site: http://www.163.com
ip: 180.171.113.144

“对于子盘面r的一系列子子盘面p，由于取了平均，所以在优势局面下和棋的预测(w≈0.5)“拖累”了r的平均胜率。在子盘面总体w偏高的情况下，把各个r下面的p中，w≈0.5的全部砍掉，然后重新计算r的平均胜率。”博主我就是这个意思。
    我还是用博主你的代码测试出来的，你把五子棋棋盘改成3*3的，然后通3个子的一测就测效果来了。对应代码就是simulate函数里return winner != current_player，这个返回值计算了和局的情况，如果return (winner != current_player) and (winner!=-1)那就是剔出了和局。

- - - - - - - - - - - - - - - -

date: 2017-08-29 22:51:41
author: Wolfpan
email: wolfpan@live.com
site: http://www.163.com
ip: 180.171.113.144

还有博主，代码159行的代码，favourable = self.simulate(board)，是否应该是favourable = self.simulate(tmp_board)，如果是favourable = self.simulate(board)，那不是第157和158行没有意义了?

- - - - - - - - - - - - - - - -

date: 2017-08-29 22:51:42
author: Npa
email: 315067671@qq.com
site: 
ip: 223.104.210.206

（此回复顺序已被修改）
确实是你说的这样，是我疏忽了。幸好这里只是先随便训练一下所有的子节点以便使其有数学意义，没有对后面造成太大的影响。已经修改，感谢。

- - - - - - - - - - - - - - - -

date: 2017-08-29 22:54:17
author: Wolfpan
email: wolfpan@live.com
site: http://www.163.com
ip: 180.171.113.144

还有第288行play_with_human()函数里的，start_time = time.time()，好像也没什么用

- - - - - - - - - - - - - - - -

date: 2017-08-29 23:14:57
author: Npa
email: 315067671@qq.com
site: 
ip: 223.104.210.206

哈哈哈，忙着实现idea，代码有些地方改来改去没有实现得很漂亮，见谅。先记着了，整个项目写完就修正代码，可能还会修整一些地方的效率，提前谢了。（另外repo的位置动了一下，文内的url改了，可以从那里点进去。）
另外就是，3*3的特殊情况似乎不能说明什么问题……（我也只是不确定）我建议你将修改过的和没修改过的两个ai，在正常的棋盘上互相对弈，统计一下胜率，看看有没有明显差别。
如果确实如此，我们可以再深入分析：）

- - - - - - - - - - - - - - - -

date: 2017-08-30 21:51:52
author: Wolfpan
email: wolfpan@live.com
site: http://www.163.com
ip: 180.171.113.144

不好意思，又来骚扰博主。博主在这里使用的CNN卷积神经网络是用来处理分类问题，还是处理回归问题？看到博主的loss函数使用了crossentropy，感觉像是个分类问题。但是博主全连接层的最后一层却是1单元，激活函数又使用了Sigmoid，好像看上去又像是在处理回归问题。我不太懂keras，只学了点皮毛tensorflow，如果是tensorflow用CNN来处理分类问题，全连接层的最后肯定不是这样写的，而是比如你想把图片分成10个类别，那个mnist的0到9的数字识别，最后是10个神经单元，tf.layers.dense(fclayer, 10)这样的写法，然后使用softmax分类器，取这10个值里面最大的那个值，来预测他属于哪个数字。

- - - - - - - - - - - - - - - -

date: 2017-08-31 09:15:13
author: Npa
email: 315067671@qq.com
site: 
ip: 223.104.213.92

我用的是binary_crossentropy，keras应该还有category_crossentropy.
关于这个问题我是这样理解的哈，分类问题本质上是一个回归问题，在用了sigmoid函数的前提下尤其如此，sigmoid的输出逻辑上可以被解释为“是本类的可能性”。
binary的交叉熵是0-1分类问题，在这里我并不想得到它对黑还是白有利这个结果，而是想得到它对黑有利的程度，所以直接就拿sigmoid的输出了事了。
另外，softmax的主要作用是对各个类的输出数据归一化（可以参考我的tensorflow入门那篇博文）如果你对MNIST数据用了交叉熵做loss，sigmoid激活做倒数第二层，softmax做倒数第一层，那么你的loss是十个binary交叉熵加和，倒数第二层的输出是十个类各自“是本类”的可能性，也就是说天然已经规约到0~1内了，到这里实际上不用softmax直接取一个最大值都可以的。

- - - - - - - - - - - - - - - -

date: 2017-08-31 14:28:33
author: Wolfpan
email: wolfpan@live.com
site: http://www.163.com
ip: 112.64.127.36

哦，是这样啊。最后，若黑棋是胜者，则除了终盘的所有盘面被标记为0.75，终盘（即黑五连珠的盘面）被标记为1。对于白，对应的数据是0.25和0。博主我感觉这样定义损失函数的标签值不是很正确，博主你有空的话，看看这篇文章，他也是用CNN，跟你的CNN基本上一样的，区别就是他最后的损失函数的定义跟你的不太一样，他好像是最大最小值原理来定义最后CNN的输出。
https://zhuanlan.zhihu.com/p/27297546 中文翻译
https://github.com/erikbern/deep-pink  作者源代码（当然我看不懂，呵呵）
https://erikbern.com/2014/11/29/deep-learning-for-chess.html，作者原文

- - - - - - - - - - - - - - - -

date: 2017-08-31 18:03:04
author: Npa
email: 315067671@qq.com
site: 
ip: 223.104.213.19

学习了，确实有些道理。可惜他的是人落子的谱面……他推理的一个前提条件是“玩家会选择最优或者近似最优的落子”。这个对我的数据集不成立。
后面如果用了人类对弈数据会找机会实验一下这个标注方法。感谢！

- - - - - - - - - - - - - - - -